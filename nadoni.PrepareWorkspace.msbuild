<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldClean>true</ShouldClean>
        <ShouldCleanPackages>false</ShouldCleanPackages>
        
        <!-- Directories -->
        <DirWorkspace>$(MSBuildProjectDirectory)</DirWorkspace>
        <DirPackages>$(DirWorkspace)\packages</DirPackages>
        <DirTools>$(DirWorkspace)\tools</DirTools>
        <DirBuild>$(DirWorkspace)\build</DirBuild>
        <DirBuildBin>$(DirBuild)\bin\$(PlatformTranslated)\$(Configuration)</DirBuildBin>
        <DirBuildDeploy>$(DirBuild)\deploy</DirBuildDeploy>
        <DirBuildLogs>$(DirBuild)\logs</DirBuildLogs>
        <DirBuildTemp>$(DirBuild)\temp</DirBuildTemp>
        <DirSrc>$(DirWorkspace)\src</DirSrc>
        
        <!-- Version number -->
        <VersionMajor>0</VersionMajor>
        <VersionMinor>0</VersionMinor>
        <VersionBuild>0</VersionBuild>
        <VersionRevision>0</VersionRevision>
        
        <!-- Tools -->
        <MsBuildExtensionsPath>$(DirTools)\msbuild.extensions</MsBuildExtensionsPath>
        
        <!-- Jenkins, the build system, adds the BZR_REVISION environment variable so we can get that here -->
        <BZR_REVISION Condition="'$(BZR_REVISION)' == '' ">-1</BZR_REVISION>
        <ScmRevision>$(BZR_REVISION)</ScmRevision>
    </PropertyGroup>
    
    <Import Project="$(MsBuildExtensionsPath)\NugetRestore.msbuild"
            Condition="Exists('$(MsBuildExtensionsPath)\NugetRestore.msbuild')"/>    
    <Import Project="$(MsBuildExtensionsPath)\TemplateFile.msbuild"
            Condition="Exists('$(MsBuildExtensionsPath)\TemplateFile.msbuild')"/>
            
    <Import Project="$(DirWorkspace)\version.xml"
            Condition="Exists('$(DirWorkspace)\version.xml')"/>

    <Target Name="Run" DependsOnTargets="_RestorePackages">
        <!-- Do nothing here -->
    </Target>
    
    <!-- Display info -->
    <Target Name="_DisplayInfo">
        <Message Text="Preparing workspace ..." />
    </Target>
    
    <!-- Clean -->
    <Target Name="_Clean" DependsOnTargets="_DisplayInfo" Condition="$(ShouldClean)">
        <!-- 
            Don't try to delete the directory because that fails randomly because
            some file is being locked. This then leads to a failing task, but ..
            the next task is run and then the delete command still executes (delayed 
            by the OS). Unfortunately the next task is the task that puts the directories
            back ...
        -->
        <ItemGroup>
            <BuildFilesToDelete Include="$(DirBuild)\**\*.*"/>
        </ItemGroup>
        <Delete Files="@(BuildFilesToDelete)" />

        <RemoveDir Directories="$(DirPackages)" Condition="$(ShouldCleanPackages)" />
    </Target>
    
    <!-- Run Nuget for the global build -->
    <PropertyGroup>
        <FileNuGetExe>$(DirSrc)\.nuget\NuGet.exe</FileNuGetExe>
        <PackagesConfig>$([System.IO.Path]::Combine($(DirWorkspace), "packages.config"))</PackagesConfig>
    </PropertyGroup>
    <Target Name="_RestorePackages" DependsOnTargets="_DisplayInfo;_Clean">
        <NugetRestore NugetPath="$(FileNuGetExe)" PackageFile="$(PackagesConfig)" PackageDirectory="$(DirPackages)" />
    </Target>
 </Project>